import org.slf4j.MDC;
import org.springframework.stereotype.Component;
import org.springframework.web.server.ServerWebExchange;
import org.springframework.web.server.WebFilter;
import org.springframework.web.server.WebFilterChain;
import reactor.core.publisher.Mono;

import java.util.UUID;

@Component
public class RequestIdFilter implements WebFilter {

    private static final String REQUEST_ID_HEADER = "X-Request-Id";
    private static final String MDC_REQUEST_ID_KEY = "requestId";

    @Override
    public Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain) {
        String requestId = exchange.getRequest().getHeaders().getFirst(REQUEST_ID_HEADER);

        if (requestId == null || requestId.isEmpty()) {
            requestId = UUID.randomUUID().toString();
        }

        // Store the request ID in MDC for logging
        String finalRequestId = requestId;
        return chain.filter(exchange)
                .contextWrite(context -> context.put(MDC_REQUEST_ID_KEY, finalRequestId))
                .doOnEach(signal -> {
                    // Add requestId to MDC before processing each signal
                    if (signal.isOnNext() || signal.isOnComplete() || signal.isOnError()) {
                        MDC.put(MDC_REQUEST_ID_KEY, finalRequestId);
                    }
                })
                .doFinally(signalType -> MDC.clear()); // Clear MDC after the request is processed
    }
}
