import org.springframework.web.reactive.function.client.WebClient;
import reactor.core.publisher.Mono;

public Mono<String> getExternalData() {
    return webClient.get()
                    .uri("/endpoint")
                    .headers(headers -> {
                        headers.add("Authorization", "Bearer your-token");
                        headers.add("Custom-Header", "CustomValue");
                        headers.add("Another-Header", "AnotherValue");
                    })
                    .retrieve()
                    .onStatus(
                        status -> status.is4xxClientError() || status.is5xxServerError(),
                        clientResponse -> clientResponse.bodyToMono(String.class)
                                                         .flatMap(errorBody -> {
                                                             // Log the full error response
                                                             System.err.println("Error response body: " + errorBody);
                                                             return Mono.error(new RuntimeException("Error response: " + errorBody));
                                                         })
                    )
                    .bodyToMono(String.class)
                    .onErrorResume(ex -> {
                        // Check if the exception has a response body
                        if (ex instanceof WebClientResponseException) {
                            WebClientResponseException responseException = (WebClientResponseException) ex;
                            String responseBody = responseException.getResponseBodyAsString();
                            System.err.println("Captured error body in onErrorResume: " + responseBody);
                            // Return a fallback or the captured error body
                            return Mono.just("Fallback response with error body: " + responseBody);
                        } else {
                            System.err.println("General error: " + ex.getMessage());
                            // Return a generic fallback response
                            return Mono.just("Fallback response on general error");
                        }
                    });
}
