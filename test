import org.springframework.stereotype.Service;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

@Service
public class XmlRegexProcessingService {

    // Method to transform the input XML to the desired format
    public String transformXmlUsingRegex(String inputXml) {
        // Define the regex pattern to capture the AccountType and Currency inside the <AccountDetails> tag
        String regex = "(<AccountDetails>\\s*<AccountType>)(.*?)(</AccountType>\\s*<Currency>)(.*?)(</Currency>\\s*</AccountDetails>)";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(inputXml);

        // Replace the AccountType if it contains #~#
        StringBuilder resultXml = new StringBuilder("<UpdatePUPDetails>");

        while (matcher.find()) {
            // Capture the matched groups (AccountType, Currency)
            String accountType = matcher.group(2);
            String currency = matcher.group(4);

            // Split the AccountType using the #~# delimiter
            String[] accountTypes = accountType.split("#~#");

            // For each split AccountType, create a new AccountDetails block
            for (String type : accountTypes) {
                resultXml.append(matcher.group(1))  // Opening <AccountDetails> and <AccountType>
                          .append(type)               // AccountType (split value)
                          .append(matcher.group(3))  // The <Currency> opening tag
                          .append(currency)          // Currency value
                          .append(matcher.group(5)); // Closing </Currency> and </AccountDetails>
            }
        }

        resultXml.append("</UpdatePUPDetails>");

        return resultXml.toString();
    }
}
