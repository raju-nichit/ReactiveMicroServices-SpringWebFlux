import org.apache.hc.client5.http.impl.classic.CloseableHttpClient;
import org.apache.hc.client5.http.impl.classic.HttpClients;
import org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory;
import org.apache.hc.core5.ssl.SSLContextBuilder;
import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
import org.springframework.web.client.RestTemplate;

import javax.net.ssl.SSLContext;
import java.io.InputStream;
import java.security.KeyStore;

public class RestTemplateWithKeyMaterial {

    public static RestTemplate createRestTemplate(String resourcePath, String password) throws Exception {
        // Load the keystore from resources folder
        try (InputStream keyStoreStream = RestTemplateWithKeyMaterial.class.getClassLoader().getResourceAsStream(resourcePath)) {
            if (keyStoreStream == null) {
                throw new IllegalArgumentException("File not found in resources: " + resourcePath);
            }

            // Load the KeyStore
            KeyStore keyStore = KeyStore.getInstance("PKCS12"); // Use "JKS" for Java KeyStore
            keyStore.load(keyStoreStream, password.toCharArray());

            // Create SSL Context
            SSLContext sslContext = SSLContextBuilder.create()
                    .loadKeyMaterial(keyStore, password.toCharArray()) // KeyStore and key password
                    .build();

            // Create SSL Socket Factory
            SSLConnectionSocketFactory sslSocketFactory = new SSLConnectionSocketFactory(sslContext);

            // Create HttpClient with the SSL Socket Factory
            CloseableHttpClient httpClient = HttpClients.custom()
                    .setSSLSocketFactory(sslSocketFactory)
                    .build();

            // Create Request Factory
            HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);

            // Return RestTemplate
            return new RestTemplate(requestFactory);
        }
    }

    public static void main(String[] args) {
        try {
            // Path to your .pfx file in resources folder
            String resourcePath = "certs/your-certificate.pfx";

            // Password for the .pfx file
            String password = "your-password";

            // Create RestTemplate
            RestTemplate restTemplate = createRestTemplate(resourcePath, password);

            // Example API Call
            String url = "https://your-secure-api.com/endpoint";
            String response = restTemplate.getForObject(url, String.class);

            System.out.println("Response: " + response);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
