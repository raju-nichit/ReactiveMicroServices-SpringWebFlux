import org.w3c.dom.*;
import javax.xml.parsers.*;
import java.io.*;

public class XMLTransformer {
    public static void main(String[] args) throws Exception {
        // Original XML string
        String xmlInput = "<UpdatePUPDetails>" +
                "<AccountDetails>" +
                "<AccountType>CDO#~#DR</AccountType>" +
                "<Currency>USD</Currency>" +
                "</AccountDetails>" +
                "</UpdatePUPDetails>";

        // Parse the original XML
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        InputStream is = new ByteArrayInputStream(xmlInput.getBytes());
        Document doc = builder.parse(is);

        // Extract the original AccountType and Currency
        NodeList accountDetailsList = doc.getElementsByTagName("AccountDetails");
        Node accountDetails = accountDetailsList.item(0);
        NodeList childNodes = accountDetails.getChildNodes();
        String accountType = null;
        String currency = null;

        // Loop through child nodes to extract values
        for (int i = 0; i < childNodes.getLength(); i++) {
            Node node = childNodes.item(i);
            if (node.getNodeName().equals("AccountType")) {
                accountType = node.getTextContent(); // CDO#~#DR
            } else if (node.getNodeName().equals("Currency")) {
                currency = node.getTextContent(); // USD
            }
        }

        // Split AccountType by #~#
        String[] accountTypes = accountType.split("#~#");

        // Create the new XML structure
        Element updatePUPDetails = doc.createElement("UpdatePUPDetails");

        for (String type : accountTypes) {
            Element newAccountDetails = doc.createElement("AccountDetails");

            Element newAccountType = doc.createElement("AccountType");
            newAccountType.setTextContent(type);

            Element newCurrency = doc.createElement("Currency");
            newCurrency.setTextContent(currency);

            newAccountDetails.appendChild(newAccountType);
            newAccountDetails.appendChild(newCurrency);

            updatePUPDetails.appendChild(newAccountDetails);
        }

        // Create a new document for output
        Document newDoc = builder.newDocument();
        newDoc.appendChild(updatePUPDetails);

        // Convert the new XML document to a string and print it
        TransformerFactory transformerFactory = TransformerFactory.newInstance();
        Transformer transformer = transformerFactory.newTransformer();
        StringWriter writer = new StringWriter();
        transformer.transform(new DOMSource(newDoc), new StreamResult(writer));

        System.out.println(writer.toString());
    }
}
